---

version:                    1
disable_existing_loggers:   False

filters:

  less_than_warning:
    ():             mirrmaid.logging.filters.MaxLevelFilter
    level:          WARNING

formatters:

  file:
    format:         '{asctime} {name}[{process:d}] {levelname:8s} {message}'
    style:          '{'

  long:
    format:         '{asctime}  {levelname}  {threadName}  {name}:{lineno}  ({funcName}) {message}'
    style:          '{'

  short:
    format:         '{levelname:7s} {threadName} - {message}'
    style:          '{'

  # Want more context?  No need to change the format here.  Just use:
  #       journalctl -o verbose
  #
  # The following journal fields are always sent: MESSAGE, PRIORITY,
  # THREAD_NAME, CODE_FILE, CODE_LINE, CODE_FUNC, LOGGER (name as supplied
  # to getLogger call), MESSAGE_ID (optional, see JournalHandler class
  # docs), SYSLOG_IDENTIFIER (defaults to sys.argv[0]).
  systemd:
    format:         '[{name}] {message}'
    style:          '{'
    datefmt:

handlers:

  logfile:
    class:          logging.handlers.TimedRotatingFileHandler
    formatter:      file
    filename:       /var/log/mirrmaid/mirrmaid
    when:           midnight
    backupCount:    7
    level:          INFO

  stdout:
    # Logging level for this handler is managed by the MirrorManager as
    # dictated by command-line options.
    class:          mirrmaid.logging.handlers.ConsoleHandler
    stream:         ext://sys.stdout
    filters:
      - less_than_warning
    formatter:      short

  stderr:
    class:          logging.StreamHandler
    stream:         ext://sys.stderr
    formatter:      short
    level:          WARNING

# journal:
#   class:          systemd.journal.JournalHandler
#   level:          DEBUG
#   formatter:      systemd

root:
  level:            DEBUG
  handlers:         [logfile, stdout, stderr]
